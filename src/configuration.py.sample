"""

HACK: this is a temporary shim to get started.  We can circle back
      and use a more robust module later that will check for ENV
      variables that override, or whatever.

Copy this file to `configuration.py` then edit that file
to match your local environment variables.

"""
import yaml, os, secrets, string
from pathlib import Path

CONFIG = yaml.load("""
---
# For localhost development, this is fine since it's a docker container
# CHANGE FOR PRODUCTION
database_url: 'mysql://rrbot:rrbot@127.0.0.1:3306/rrbot...'
mqtt_url: 'localhost'
discord_client_id: 1234567890
discord_client_secret: 'put your token here'
discord_bot_token: 'token here'
discord_oauth_callback_root: 'http://127.0.0.1:5000'
default_command_prefix: '='
admins:
  - 290829729458814977 # Q
  - 376200817054842882 # Babs
  - 158406380162646016 # Omnilord
  - 250138180718821376 # Hellz
mod_roles:
  - 694253939734085732 # @staff
log_level: 'INFO'
debug_channel: 1234567890....
""", Loader=yaml.FullLoader)

CONFIG['rootpath'] = ROOT     = Path(__file__).parent.absolute().parent
CONFIG['srcpath']  = SRC      = os.path.join(ROOT, 'src')
CONFIG['prefixes'] = PREFIXES = {}

DB_URL = CONFIG['database_url']
MQTT_URL = CONFIG['mqtt_url']
CLIENTID = CONFIG['discord_client_id']
SECRET = CONFIG['discord_client_secret']
TOKEN = CONFIG['discord_bot_token']
CALLBACK_ROOT = CONFIG['discord_oauth_callback_root']
PREFIX = CONFIG['default_command_prefix'].lower()
ADMINS = CONFIG['admins']
LOG_LEVEL = CONFIG['log_level']
DEBUG_CHANNEL = CONFIG['debug_channel']


def generate_app_secret(p, size):
    pool = string.ascii_letters + string.digits + string.punctuation
    choices = ''.join((secrets.choice(pool) for _ in range(size)))
    p.write_text(choices)
    return choices

def app_secret():
    p = Path(os.path.join(ROOT, '.session_secret'))
    if p.exists():
        return p.read_text()
    return generate_app_secret(p, 63)

def update_live_prefix(id, prefix):
    global PREFIXES
    current_prefix = PREFIXES.get(id, None)
    if prefix != current_prefix:
        if prefix is None:
            PREFIXES.delete(id)
        else:
            PREFIXES[id] = prefix

CONFIG['app_secret'] = APP_SECRET = app_secret()

if __name__ == "__main__":
    import sys

    conf_keys = CONFIG.keys()
    if len(sys.argv) > 1:
        for key in sys.argv[1:]:
            if key in conf_keys:
                print(CONFIG[key])
    else:
        print(CONFIG)
